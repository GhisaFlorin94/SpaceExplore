// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpaceExplorePlanetService.DataLayer;

namespace SpaceExplorePlanetService.Migrations
{
    [DbContext(typeof(PlanetServiceDBContext))]
    [Migration("20200729165448_populatePlantes")]
    partial class populatePlantes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SpaceExplorePlanetService.DataLayer.Entities.Description", b =>
                {
                    b.Property<int>("DescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaptainId")
                        .HasColumnType("int");

                    b.Property<string>("CaptainName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DescriptionId");

                    b.ToTable("Descriptions");
                });

            modelBuilder.Entity("SpaceExplorePlanetService.DataLayer.Entities.Planet", b =>
                {
                    b.Property<int>("PlanetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DescriptionId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanetStatus")
                        .HasColumnType("int");

                    b.HasKey("PlanetId");

                    b.HasIndex("DescriptionId");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("SpaceExplorePlanetService.DataLayer.Entities.Robot", b =>
                {
                    b.Property<int>("RobotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PlanetId")
                        .HasColumnType("int");

                    b.Property<string>("RobotName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RobotId");

                    b.HasIndex("PlanetId");

                    b.ToTable("Robots");
                });

            modelBuilder.Entity("SpaceExplorePlanetService.DataLayer.Entities.Planet", b =>
                {
                    b.HasOne("SpaceExplorePlanetService.DataLayer.Entities.Description", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId");
                });

            modelBuilder.Entity("SpaceExplorePlanetService.DataLayer.Entities.Robot", b =>
                {
                    b.HasOne("SpaceExplorePlanetService.DataLayer.Entities.Planet", null)
                        .WithMany("ExploreRobots")
                        .HasForeignKey("PlanetId");
                });
#pragma warning restore 612, 618
        }
    }
}
